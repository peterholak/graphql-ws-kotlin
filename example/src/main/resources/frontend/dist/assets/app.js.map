{"version":3,"sources":["webpack:///./src/fetcher.ts","webpack:///./src/index.tsx"],"names":[],"mappings":"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","file":"assets/app.js","sourcesContent":["/* Based on from https://github.com/apollographql/GraphiQL-Subscriptions-Fetcher */\r\n\r\nimport { SubscriptionClient } from 'subscriptions-transport-ws';\r\nimport { parse } from 'graphql';\r\n\r\nconst hasSubscriptionOperation = (graphQlParams: any) => {\r\n  const queryDoc = parse(graphQlParams.query);\r\n\r\n  for (let definition of queryDoc.definitions) {\r\n    if (definition.kind === 'OperationDefinition') {\r\n      const operation = definition.operation;\r\n      if (operation === 'subscription' && (graphQlParams.operationName === undefined || (definition.name && graphQlParams.operationName === definition.name.value))) {\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n\r\n  return false;\r\n};\r\n\r\nexport const graphQLFetcher = (subscriptionsClient: SubscriptionClient, fallbackFetcher: Function, subscribedCallback: (id, result, error) => any) => {\r\n  return (graphQLParams: any) => {\r\n    if (subscriptionsClient && hasSubscriptionOperation(graphQLParams)) {\r\n      let id: string\r\n      id = subscriptionsClient.subscribe({\r\n        query: graphQLParams.query,\r\n        variables: graphQLParams.variables,\r\n        operationName: graphQLParams.operationName\r\n      }, function (error, result) {\r\n        if (error) {\r\n          subscribedCallback(id, undefined, error)\r\n        } else {\r\n          subscribedCallback(id, result, undefined)\r\n        }\r\n      });\r\n      return Promise.resolve(\"Subscription id is \" + id + \". Data received via subscriptions will appear in the area above\")\r\n    } else {\r\n      return fallbackFetcher(graphQLParams);\r\n    }\r\n  };\r\n};\n\n\n// WEBPACK FOOTER //\n// ./src/fetcher.ts","import * as React from 'react'\r\nimport * as ReactDOM from 'react-dom'\r\nimport * as GraphiQL from 'graphiql'\r\nimport { graphQLFetcher } from './fetcher'\r\nimport { SubscriptionClient } from 'subscriptions-transport-ws'\r\n\r\n// Change this when running under webpack-dev-server\r\nconst host = window.location.host\r\n// const host = 'localhost:4567'\r\n\r\nconst subscriptionClient = new SubscriptionClient(\r\n    'ws://' + host + \"/subscriptions\",\r\n    { reconnect: true }\r\n)\r\n\r\nfunction postFetcher(payload: any) {\r\n    return fetch('http://' + host + '/graphql', {\r\n            method: 'post',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(payload)\r\n        }).then((response: Response) => response.json())\r\n}\r\n\r\ninterface SubscriptionData { payload: { id: string, data?: any, errors?: any }, reactKey: number }\r\ninterface State { events: SubscriptionData[], status: string }\r\nclass App extends React.Component<{}, State> {\r\n    state: State = { events: [], status: 'disconnected' }\r\n    fetcher = graphQLFetcher(subscriptionClient, postFetcher, this.onSubscriptionData.bind(this))\r\n    unrelatedValueElement: HTMLInputElement\r\n    keyCounter = 0\r\n\r\n    componentDidMount() {\r\n        subscriptionClient.onConnecting(() => this.setState({ status: 'connecting' }))\r\n        subscriptionClient.onConnected(() => this.setState({ status: 'connected '}))\r\n        subscriptionClient.onDisconnected(() => this.setState({ status: 'disconnected'}))\r\n        subscriptionClient.onReconnecting(() => this.setState({ status: 'reconnecting'}))\r\n        subscriptionClient.onReconnected(() => this.setState({ status: 'reconnected' }))\r\n    }\r\n\r\n    render() {\r\n        return <div style={{width: '100%', height: '100%'}}>\r\n            <div style={{height: '25%', display: 'flex'}}>\r\n                <div style={{flexGrow: 0.25}}>\r\n                    <div>\r\n                        <button onClick={this.notifyUnrelated.bind(this)}>Notify unrelated</button>\r\n                        <input defaultValue={\"10\"} ref={e => this.unrelatedValueElement = e} />\r\n                        </div>\r\n                    <div>\r\n                        <button onClick={this.unsubscribeAll.bind(this)}>Unsubscribe all</button>\r\n                    </div>\r\n                    <div><button onClick={this.clearLog.bind(this)}>Clear log</button></div>\r\n                    <div>WebSocket status: {this.state.status}</div>\r\n                </div>\r\n                <div style={{flexGrow: 0.75, height: '100%', overflow: 'auto'}}>\r\n                    {this.state.events.map(e => <div key={e.reactKey}>{JSON.stringify(e.payload)}</div>)}\r\n                </div>\r\n            </div>\r\n            <div style={{height: '75%'}}>\r\n                <GraphiQL style={{flexGrow: 1}} fetcher={this.fetcher} />\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n    onSubscriptionData(id, result, error) {\r\n        this.keyCounter++\r\n        if (result !== undefined) {\r\n            this.setState({ events: [ ...this.state.events, { payload: { id, data: result }, reactKey: this.keyCounter } ] })\r\n        }else{\r\n            this.setState({ events: [ ...this.state.events, { payload: { id, errors: error }, reactKey: this.keyCounter } ] })\r\n        }\r\n    }\r\n\r\n    notifyUnrelated() {\r\n        fetch(\"http://\" + host + \"/notify-unrelated\", {\r\n            method: 'POST',\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({ value: this.unrelatedValueElement.value })\r\n        })\r\n    }\r\n\r\n    unsubscribeAll() {\r\n        subscriptionClient.unsubscribeAll()\r\n    }\r\n\r\n    clearLog() {\r\n        this.setState({ events: [] })\r\n    }\r\n}\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('app')\r\n)\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.tsx"],"sourceRoot":""}